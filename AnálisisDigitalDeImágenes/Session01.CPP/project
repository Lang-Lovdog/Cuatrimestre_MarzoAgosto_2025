let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/Documents/ACAD/MAESTRÍA/Cuatrimestre_MarzoAgosto_2025/AnálisisDigitalDeImágenes/Session01.CPP
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +9 Makefile
badd +8 OCV_Course.hxx
badd +129 OCV_Course.cxx
badd +10 OCV_Course.cpp
argglobal
%argdel
$argadd .
edit OCV_Course.cxx
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 86 + 101) / 203)
exe '2resize ' . ((&lines * 28 + 34) / 68)
exe 'vert 2resize ' . ((&columns * 116 + 101) / 203)
exe '3resize ' . ((&lines * 36 + 34) / 68)
exe 'vert 3resize ' . ((&columns * 116 + 101) / 203)
argglobal
balt OCV_Course.hxx
setlocal foldmethod=expr
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
120
sil! normal! zo
128
sil! normal! zo
129
sil! normal! zo
let s:l = 127 - ((126 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 127
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("OCV_Course.hxx", ":p")) | buffer OCV_Course.hxx | else | edit OCV_Course.hxx | endif
if &buftype ==# 'terminal'
  silent file OCV_Course.hxx
endif
balt OCV_Course.cpp
setlocal foldmethod=expr
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
1
sil! normal! zo
let s:l = 10 - ((9 * winheight(0) + 14) / 28)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 10
normal! 0
wincmd w
argglobal
if bufexists(fnamemodify("OCV_Course.cpp", ":p")) | buffer OCV_Course.cpp | else | edit OCV_Course.cpp | endif
if &buftype ==# 'terminal'
  silent file OCV_Course.cpp
endif
balt OCV_Course.hxx
setlocal foldmethod=expr
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
6
sil! normal! zo
let s:l = 10 - ((9 * winheight(0) + 18) / 36)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 10
normal! 03|
wincmd w
exe 'vert 1resize ' . ((&columns * 86 + 101) / 203)
exe '2resize ' . ((&lines * 28 + 34) / 68)
exe 'vert 2resize ' . ((&columns * 116 + 101) / 203)
exe '3resize ' . ((&lines * 36 + 34) / 68)
exe 'vert 3resize ' . ((&columns * 116 + 101) / 203)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
