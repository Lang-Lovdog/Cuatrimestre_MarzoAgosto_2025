let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/Documents/ACAD/MAESTRÍA/Cuatrimestre_MarzoAgosto_2025/CómputoEvolutivo/LovdogAG/LovdogAG-Project
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +114 ~/Documents/ACAD/MAESTRÍA/Cuatrimestre_MarzoAgosto_2025/CómputoEvolutivo/LovdogAG/Notas/PlanLovdogAG.norg
badd +886 src/lovdogAG.cxx
badd +11 src/lovdogAG.hxx
badd +46 src/main.cpp
badd +3 salidaUwU.txt
badd +21 ~/Documents/ACAD/MAESTRÍA/Cuatrimestre_MarzoAgosto_2025/CómputoEvolutivo/LovdogAG/Notas/journaling.norg
badd +0 salidaRestricted.txt
argglobal
%argdel
$argadd src/lovdogAG.cxx
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit src/lovdogAG.hxx
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 130 + 134) / 268)
exe 'vert 2resize ' . ((&columns * 137 + 134) / 268)
argglobal
balt src/lovdogAG.cxx
setlocal foldmethod=expr
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
1
sil! normal! zo
13
sil! normal! zo
15
sil! normal! zo
let s:l = 11 - ((10 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 11
normal! 036|
wincmd w
argglobal
if bufexists(fnamemodify("src/lovdogAG.cxx", ":p")) | buffer src/lovdogAG.cxx | else | edit src/lovdogAG.cxx | endif
if &buftype ==# 'terminal'
  silent file src/lovdogAG.cxx
endif
balt src/lovdogAG.hxx
setlocal foldmethod=expr
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
12
sil! normal! zo
403
sil! normal! zo
403
sil! normal! zc
883
sil! normal! zo
let s:l = 882 - ((389 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 882
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 130 + 134) / 268)
exe 'vert 2resize ' . ((&columns * 137 + 134) / 268)
tabnext
edit src/main.cpp
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 133 + 134) / 268)
exe 'vert 2resize ' . ((&columns * 134 + 134) / 268)
argglobal
balt salidaUwU.txt
setlocal foldmethod=expr
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
8
sil! normal! zo
11
sil! normal! zo
22
sil! normal! zo
23
sil! normal! zo
26
sil! normal! zo
33
sil! normal! zo
49
sil! normal! zo
let s:l = 61 - ((60 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 61
normal! 021|
wincmd w
argglobal
if bufexists(fnamemodify("salidaRestricted.txt", ":p")) | buffer salidaRestricted.txt | else | edit salidaRestricted.txt | endif
if &buftype ==# 'terminal'
  silent file salidaRestricted.txt
endif
balt salidaUwU.txt
setlocal foldmethod=syntax
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
let s:l = 6496 - ((57 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 6496
normal! 0
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 133 + 134) / 268)
exe 'vert 2resize ' . ((&columns * 134 + 134) / 268)
tabnext
edit ~/Documents/ACAD/MAESTRÍA/Cuatrimestre_MarzoAgosto_2025/CómputoEvolutivo/LovdogAG/Notas/journaling.norg
argglobal
balt ~/Documents/ACAD/MAESTRÍA/Cuatrimestre_MarzoAgosto_2025/CómputoEvolutivo/LovdogAG/Notas/PlanLovdogAG.norg
setlocal foldmethod=expr
setlocal foldexpr=nvim_treesitter#foldexpr()
setlocal foldmarker={{{,}}}
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldenable
let s:l = 2 - ((1 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 2
normal! 013|
tabnext 2
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
